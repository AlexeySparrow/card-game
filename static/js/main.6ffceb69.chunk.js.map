{"version":3,"sources":["App.js","store/redusers/cards.js","store/store.js","index.js"],"names":["App","firstCard","secondCard","cards","document","querySelectorAll","hasFlippedCard","lockBoard","flipCard","this","classList","add","dataset","framework","removeEventListener","resetBoard","setTimeout","remove","forEach","card","randomPos","Math","floor","random","style","order","addEventListener","className","data-framework","src","alt","initialState","id","name","img","reducers","combineReducers","state","action","type","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ffceb69.chunk.js","sourcesContent":["import \"./app.css\"\n\nfunction App() {\n\n    const cards = document.querySelectorAll('.memory-card');\n\n    let hasFlippedCard = false;\n    let lockBoard = false;\n    let firstCard, secondCard;\n\n    function flipCard() {\n        if (lockBoard) return;\n        if (this === firstCard) return;\n\n        this.classList.add('flip');\n\n        if (!hasFlippedCard) {\n            hasFlippedCard = true;\n            firstCard = this;\n\n            return;\n        }\n\n        secondCard = this;\n        checkForMatch();\n    }\n\n    function checkForMatch() {\n        let isMatch = firstCard.dataset.framework === secondCard.dataset.framework;\n\n        isMatch ? disableCards() : unflipCards();\n    }\n\n    function disableCards() {\n        firstCard.removeEventListener('click', flipCard);\n        secondCard.removeEventListener('click', flipCard);\n\n        resetBoard();\n    }\n\n    function unflipCards() {\n        lockBoard = true;\n\n        setTimeout(() => {\n            firstCard.classList.remove('flip');\n            secondCard.classList.remove('flip');\n\n            resetBoard();\n        }, 1500);\n    }\n\n    function resetBoard() {\n        [hasFlippedCard, lockBoard] = [false, false];\n        [firstCard, secondCard] = [null, null];\n    }\n\n    (function shuffle() {\n        cards.forEach(card => {\n            let randomPos = Math.floor(Math.random() * 12);\n            card.style.order = randomPos;\n        });\n    })();\n\n    cards.forEach(card => card.addEventListener('click', flipCard));\n\n  return (\n      <section className=\"memory-game\">\n        <div className=\"memory-card\" data-framework=\"aurelia\">\n          <img className=\"front-face\" src=\"img/aurelia.svg\" alt=\"Aurelia\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n        <div className=\"memory-card\" data-framework=\"aurelia\">\n          <img className=\"front-face\" src=\"img/aurelia.svg\" alt=\"Aurelia\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n\n        <div className=\"memory-card\" data-framework=\"vue\">\n          <img className=\"front-face\" src=\"img/vue.svg\" alt=\"Vue\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n        <div className=\"memory-card\" data-framework=\"vue\">\n          <img className=\"front-face\" src=\"img/vue.svg\" alt=\"Vue\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n\n        <div className=\"memory-card\" data-framework=\"angular\">\n          <img className=\"front-face\" src=\"img/angular.svg\" alt=\"Angular\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n        <div className=\"memory-card\" data-framework=\"angular\">\n          <img className=\"front-face\" src=\"img/angular.svg\" alt=\"Angular\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n\n        <div className=\"memory-card\" data-framework=\"ember\">\n          <img className=\"front-face\" src=\"img/ember.svg\" alt=\"Ember\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n        <div className=\"memory-card\" data-framework=\"ember\">\n          <img className=\"front-face\" src=\"img/ember.svg\" alt=\"Ember\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n\n        <div className=\"memory-card\" data-framework=\"backbone\">\n          <img className=\"front-face\" src=\"img/backbone.svg\" alt=\"Backbone\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n        <div className=\"memory-card\" data-framework=\"backbone\">\n          <img className=\"front-face\" src=\"img/backbone.svg\" alt=\"Backbone\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n\n        <div className=\"memory-card\" data-framework=\"react\">\n          <img className=\"front-face\" src=\"img/react.svg\" alt=\"React\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n        <div className=\"memory-card\" data-framework=\"react\">\n          <img className=\"front-face\" src=\"img/react.svg\" alt=\"React\"/>\n          <img className=\"back-face\" src=\"img/js-badge.svg\" alt=\"JS Badge\"/>\n        </div>\n      </section>\n  );\n}\n\nexport default App;\n","// const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    cards: [\r\n        {id: 1, name: 'img', img: ''},\r\n        {id: 2, name: 'img', img: ''},\r\n        {id: 3, name: 'img', img: ''},\r\n        {id: 4, name: 'img', img: ''},\r\n        {id: 5, name: 'img', img: ''},\r\n        {id: 6, name: 'img', img: ''},\r\n        {id: 7, name: 'img', img: ''},\r\n        {id: 8, name: 'img', img: ''},\r\n    ]\r\n}\r\n\r\nexport const cardsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        // case SEND_MESSAGE: {\r\n        //     let mess = state.newMessageText;\r\n        //     let newMessage = {\r\n        //         id: 4,\r\n        //         message: mess\r\n        //     }\r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageText: '',\r\n        //         MyMessage: [ ...state.MyMessage, newMessage]\r\n        //     }\r\n        // }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// export const updateNewMessageCreator = (message) => ({type: UPDATE_NEW_MESSAGE_TEXT, newMessage: message})\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {cardsReducer} from \"./redusers/cards\";\r\n\r\nlet reducers = combineReducers({\r\n    cards: cardsReducer\r\n});\r\n\r\nexport let store = createStore(reducers);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}